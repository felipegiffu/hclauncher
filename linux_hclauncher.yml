#############################################################################################
###   NAME:              install_hclauncher.yml                                              #
###   VERSION:           1.0                                                                 #
###   DESCRIPTION:       Download ITSS policies and install on servers.                      #
###   CREATION DATE:     20/11/2019                                                          #
###   ESCRITO POR:       Felipe Thomaz Giffu                                                 #
###   E-MAIL:            felipe.giffu@ibm.com                                                #
###   PLATFORM:          Red Hat / SUSE / AIX                                                #
#############################################################################################
---
- hosts: teste
  remote_user: ansible
  become: yes
  become_method: sudo
  # gather_facts: false

  vars:
    localBaseDir: /tmp/HealthCheck
    localBaseDirDownloads: "{{ localBaseDir }}/downloads"
    localBaseDirHCReport: "{{ localBaseDir }}/reports"
    localBaseDirHClauncher: "{{ localBaseDir }}/HClauncher_SVC"
    localBaseDirHCBin: "{{ localBaseDirHClauncher }}/HCLauncher"
    localBaseDirHCPol: "{{ localBaseDirHClauncher }}/HCPolicies"
    localBaseDirHCReport: "{{ localBaseDirHClauncher }}/HCReports"
    localBaseDirScripts: "{{ localBaseDirDownloads }}/scripts"
    HCurl: http://mlvgsa.ibm.com/projects/s/scr/HCLTK/V16
    HCurlPol: http://mlvgsa.ibm.com/home/t/s/tscmemea/web/public/files
    HCurlScripts: https://github.com/felipegiffu/hclauncher/raw/master/scripts.zip


  tasks:

    - name: Check /tmp freespace, 2.5GB is needed to run the HCLauncher
      shell: df /tmp --output\=avail | tail -1
      register: tmp_freespace

    - block:
      - name: "End the playbook if some server fail in the free space check in the /tmp"
        debug:
          msg: "Ending the playbook... Please chech the space in the /tmp because is needed 2.5 GB free"
        when: tmp_freespace.stdout|float < 2560000
      - meta: end_play
        when: tmp_freespace.stdout|float < 2560000

    - name : Creating Local Folders
      run_once: yes
      file:
        path: "{{ item }}"
        state: directory
        owner: ansible
        group: ansible
        mode: 0755
      with_items:
        - "{{ localBaseDirDownloads }}"

    - name: Checking if HCLauncher_linux.toolkit exist
      stat:
        path: "{{ localBaseDir }}/downloads/HCLauncher_linux.toolkit"
      register: toolkit_file
    
    - name: Download Script
      become: no
      run_once: yes
      get_url:
        url: "{{ item }}"
        dest: "{{ localBaseDirDownloads }}"
        owner: ansible
        group: ansible
        mode: 0755
      with_items:
        - "{{ HCurlScripts }}"
    - name: Unpacking the Script
      shell: |
        cd {{ localBaseDirDownloads }};unzip scripts.zip
        rm {{ localBaseDirDownloads }}/scripts.zip 
        chown ansible:ansible -R /tmp/HealthCheck/
        chmod 755 -R /tmp/HealthCheck/downloads
        
    - name: Creating HClauncher, HCBin, HCPol, HCReport Folders
      file:
        path: "{{ item }}"
        state: directory
        owner: ansible
        group: ansible
        mode: 0755
      with_items:
        - "{{ localBaseDirHClauncher }}"
        #- "{{ localBaseDirHCBin }}"
        - "{{ localBaseDirHCPol }}"
        - "{{ localBaseDirHCReport }}"

    - name: Download HCLauncher Binaries
      become: no
      run_once: yes
      get_url:
        url: "{{ item }}"
        dest: "{{ localBaseDirHClauncher }}"
        owner: ansible
        group: ansible
        mode: 0755
      with_items:
        - "{{ HCurl }}/HCLauncher_linux.toolkit"
      when: toolkit_file.stat.exists == false
      ignore_errors: no

    - name: Install HCLauncher on RHEL hosts
      shell: |
        cd {{ localBaseDirHClauncher }};tar xf HCLauncher_linux.toolkit
        rm {{ localBaseDirHClauncher }}/HCLauncher_linux.toolkit

    - name : Create Local Folders
      run_once: yes
      file:
        path: "{{ item }}"
        state: directory
        owner: ansible
        group: ansible
        mode: 0755
      with_items:
        - "{{ localBaseDirDownloads }}"

    - name: Remove Remote Old Policies and Reports
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ localBaseDirHCPol }}"
        - "{{ localBaseDirHCReport }}"

    - name: Creating Local HCBin, HCpol, HCReport Folders
      file:
        path: "{{ item }}"
        state: directory
        owner: ansible
        group: ansible
        mode: 0755
      with_items:
        - "{{ localBaseDirHClauncher }}"
        - "{{ localBaseDirHCBin }}"
        - "{{ localBaseDirHCPol }}"
        - "{{ localBaseDirHCReport }}"
    
    - name: Download HCLauncher Policies
      become: no
      run_once: yes
      get_url:
        url: "{{ HCurlPol }}/{{ item }}"
        dest: "{{ localBaseDirHCPol }}"
        owner: ansible
        group: ansible
        mode: 0755
      with_items:
        - Tivoli/scm511policies/gsdisec/OpenSSH.UNIX.ITSSCSD.pol
        - Tivoli/scm511policies/gsdisec/UNIX.Linux.ITSSCSD.pol
        - Sudo_st/SUDO.UNIX.ITSSCSD.pol

    - name: Run HCLauncher
      script: "{{ localBaseDirHCBin }}/hc_run.sh {{ localBaseDirHCBin }} {{ localBaseDirHCPol }} {{ item }} {{ localBaseDirHCReport }} {{ now(fmt='%d%B%Y') }} {{ ansible_hostname }}"
      with_items:
        - UNIX.Linux.ITSSCSD.pol
        - OpenSSH.UNIX.ITSSCSD.pol
        - SUDO.UNIX.ITSSCSD.pol

    - name: Generating list of PDF to copy
      shell: "ls -1 {{ remoteBaseDirHCReport }}/*.pdf"
      register: pdf_list

    - name: Generating list of PDF to copy
      shell: "ls -1 {{ remoteBaseDirHCReport }}/*.pdf"
      register: pdf_list

    #- name : Create Local Folders to report
    #  delegate_to: b01lvi24221650.ahe.pok.ibm.com
    #  run_once: yes
    #  file:
    #    path: "{{ item }}"
    #    state: directory
    #    owner: cansible
    #    group: ansiblegr
    #    mode: 0755
    #  with_items:
    #    - "{{ localBaseDirHCReport }}"

    #- name: Copy Reports to Ansible Engine
    #  fetch:
    #    src: "{{ item }}"
    #    dest: "{{ localBaseDirHCReport }}/"
    #    owner: cansible
    #    group: ansiblegr
    #    flat: yes
    #  with_items: "{{ pdf_list.stdout_lines }}"

    #- name: Create a zip archive of Report folder
    #  delegate_to: b01lvi24221650.ahe.pok.ibm.com
    #  archive:
    #    path: "{{ localBaseDirHCReport }}/"
    #    dest: "{{ localBaseDir }}/HCLinux-reports-{{ansible_date_time.date}}.zip"
    #    format: zip
...
